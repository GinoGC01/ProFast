---
import Star from "../../icons/star.astro";
interface Props {
  name: string;
  id: string;
  profileImg: string;
  backgroundImg: string;
  profession?: string;
  verify: boolean;
  informationOfWork: string;
  testimonies: { client: string; feedback: string; punctuation: number }[]; // Arreglo de objetos con propiedades especÃ­ficas
  achievements: string[];
  category: string;
  pruralProfession?: string;
}
const {
  name,
  id,
  profession,
  verify,
  profileImg,
  backgroundImg,
  informationOfWork,
  testimonies,
  achievements,
  category,
  pruralProfession,
} = Astro.props;

const promedioPuntuacion =
  testimonies.reduce((acumulador, testimonie) => {
    return acumulador + testimonie.punctuation;
  }, 0) / testimonies.length;

  const logros = achievements.length > 2 ? achievements.slice(1, 3) : achievements
---

<li
  class="card"
  data-category={category}
  data-profession={profession}
  data-pruralProfession={pruralProfession}
>
  <figure>
    <img src={backgroundImg} alt={`background image of ${name}`} />
  </figure>
  <div class="profile-data">
    <div class="superior-data">
      <img
        src={profileImg}
        alt={`profile image of ${name}`}
        style={`view-transition-name: ${`img-${id}`}`}
      />
      <a href={`/Profiles/${id}`} class="name-profession">
        <h2 class="name" style={`view-transition-name: ${`name-${id}`}`}>
          {name}
        </h2>
        <span
          class="profession"
          style={`view-transition-name: ${`profession-${id}`}`}
          >{profession}</span
        >
      </a>
      {verify && <span class="verify">verificado</span>}
    </div>
    <p>{informationOfWork}</p>
  </div>
  <div class="insights">
    <span
      ><Star />{promedioPuntuacion.toFixed(1)}
      <b>({testimonies.length})</b></span
    >
    <ul>
      {
        logros.map((achivement) => {
          return <li>{achivement}</li>;
        })
      }
    </ul>
  </div>
</li>

<style>

  @view-transition {
    navigation: auto;
  }
  
  .card {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
    border: 1px solid rgba(128, 128, 128, 0.5);
    color: rgb(212, 212, 212);
    min-height: 500px;
  }

  figure {
    width: 100%;
  }

  figure img {
    aspect-ratio: 16 / 9;
    object-fit: cover;
    width: 100%;
  }

  .profile-data,
  .insights {
    padding-inline: 10px;
  }
  .profile-data p {
    margin-block: 10px;
  }

  .verify {
    display: block;
    padding: 2px 5px;
    font-size: 0.8em;
    background-color: #14ae5c;
    display: grid;
    place-content: center;
    height: 1.3em;
    border-radius: 5px;
    position: absolute;
    top: -20px;
    right: 0;
  }

  .superior-data {
    display: flex;
    position: relative;
    padding-top: 7px;
    width: 100%;
  }

  .superior-data img {
    aspect-ratio: 1 / 1;
    width: 2.5em;
    height: 2.5em;
    object-fit: cover;
    border-radius: 50%;
    margin-right: 10px;
  }

  .name-profession {
    display: block;
    color: white;
    width: 80%;
  }

  .name-profession:hover {
    text-decoration: underline;
  }

  .name {
    font-weight: 600;
    font-size: 1.2em;
  }

  .profession {
    color: #858585;
  }

  .insights span {
    display: flex;
    font-weight: 600;
  }

  .insights span b {
    font-weight: 400;
    color: #858585;
    margin-left: 5px;
  }

  .insights ul {
    margin-top: 10px;
  }

  .insights li {
    padding: 2px 7px;
    border: 1px solid #858585;
    border-radius: 10px;
    font-size: 0.7em;
    display: inline-block;
    margin: 5px;
  }
</style>
